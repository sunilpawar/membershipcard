<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from com.skvare.membershipcard/xml/schema/CRM/Membershipcard/MembershipCard.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:335cedaa25565a045b507dadd46ef89a)
 */
use CRM_Membershipcard_ExtensionUtil as E;

/**
 * Database access object for the MembershipCard entity.
 */
class CRM_Membershipcard_DAO_MembershipCard extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_membership_card';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique MembershipCard ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * FK to civicrm_membership
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_id;

  /**
   * FK to civicrm_membership_card_template
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $template_id;

  /**
   * Generated card data for front
   *
   * @var string
   *   (SQL type: longtext)
   *   Note that values will be retrieved from the database as a string.
   */
  public $front_card_data;

  /**
   * Generated card data for back
   *
   * @var string
   *   (SQL type: longtext)
   *   Note that values will be retrieved from the database as a string.
   */
  public $back_card_data;

  /**
   * QR code data
   *
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $qr_code;

  /**
   * Bar code data
   *
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $barcode;

  /**
   * When card was created
   *
   * @var string|null
   *   (SQL type: timestamp)
   *   Note that values will be retrieved from the database as a string.
   */
  public $created_date;

  /**
   * When card was modified
   *
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $modified_date;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_membership_card';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Membership Cards') : E::ts('Membership Card');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique MembershipCard ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_membership_card.id',
          'table_name' => 'civicrm_membership_card',
          'entity' => 'MembershipCard',
          'bao' => 'CRM_Membershipcard_DAO_MembershipCard',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'membership_id' => [
          'name' => 'membership_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Membership ID'),
          'description' => E::ts('FK to civicrm_membership'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_membership_card.membership_id',
          'table_name' => 'civicrm_membership_card',
          'entity' => 'MembershipCard',
          'bao' => 'CRM_Membershipcard_DAO_MembershipCard',
          'localizable' => 0,
          'FKClassName' => 'CRM_Member_DAO_Membership',
          'add' => NULL,
        ],
        'template_id' => [
          'name' => 'template_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Template ID'),
          'description' => E::ts('FK to civicrm_membership_card_template'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_membership_card.template_id',
          'table_name' => 'civicrm_membership_card',
          'entity' => 'MembershipCard',
          'bao' => 'CRM_Membershipcard_DAO_MembershipCard',
          'localizable' => 0,
          'FKClassName' => 'CRM_Membershipcard_DAO_MembershipCardTemplate',
          'add' => NULL,
        ],
        'front_card_data' => [
          'name' => 'front_card_data',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => E::ts('Front Card Data'),
          'description' => E::ts('Generated card data for front'),
          'required' => FALSE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_membership_card.front_card_data',
          'export' => TRUE,
          'table_name' => 'civicrm_membership_card',
          'entity' => 'MembershipCard',
          'bao' => 'CRM_Membershipcard_DAO_MembershipCard',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
          ],
          'add' => NULL,
        ],
        'back_card_data' => [
          'name' => 'back_card_data',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => E::ts('Back Card Data'),
          'description' => E::ts('Generated card data for back'),
          'required' => FALSE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_membership_card.back_card_data',
          'export' => TRUE,
          'table_name' => 'civicrm_membership_card',
          'entity' => 'MembershipCard',
          'bao' => 'CRM_Membershipcard_DAO_MembershipCard',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
          ],
          'add' => NULL,
        ],
        'qr_code' => [
          'name' => 'qr_code',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('QR Code'),
          'description' => E::ts('QR code data'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_membership_card.qr_code',
          'export' => TRUE,
          'table_name' => 'civicrm_membership_card',
          'entity' => 'MembershipCard',
          'bao' => 'CRM_Membershipcard_DAO_MembershipCard',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'barcode' => [
          'name' => 'barcode',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Bar Code'),
          'description' => E::ts('Bar code data'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_membership_card.barcode',
          'export' => TRUE,
          'table_name' => 'civicrm_membership_card',
          'entity' => 'MembershipCard',
          'bao' => 'CRM_Membershipcard_DAO_MembershipCard',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'created_date' => [
          'name' => 'created_date',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => E::ts('Created Date'),
          'description' => E::ts('When card was created'),
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_membership_card.created_date',
          'headerPattern' => '/created(.?date)?/i',
          'dataPattern' => '/^\d{4}-?\d{2}-?\d{2} ?(\d{2}:?\d{2}:?(\d{2})?)?$/',
          'export' => TRUE,
          'default' => 'CURRENT_TIMESTAMP',
          'table_name' => 'civicrm_membership_card',
          'entity' => 'MembershipCard',
          'bao' => 'CRM_Membershipcard_DAO_MembershipCard',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDateTime',
            'label' => E::ts("Created Date"),
          ],
          'add' => NULL,
        ],
        'modified_date' => [
          'name' => 'modified_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Modified Date'),
          'description' => E::ts('When card was modified'),
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_membership_card.modified_date',
          'headerPattern' => '/modified(.?date)?/i',
          'dataPattern' => '/^\d{4}-?\d{2}-?\d{2} ?(\d{2}:?\d{2}:?(\d{2})?)?$/',
          'export' => TRUE,
          'default' => 'CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP',
          'table_name' => 'civicrm_membership_card',
          'entity' => 'MembershipCard',
          'bao' => 'CRM_Membershipcard_DAO_MembershipCard',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDateTime',
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'membership_card', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'membership_card', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
